{"ast":null,"code":"import _classCallCheck from \"/Users/Saleem/prime/word_find_solver/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Saleem/prime/word_find_solver/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Saleem/prime/word_find_solver/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Saleem/prime/word_find_solver/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Saleem/prime/word_find_solver/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Saleem/prime/word_find_solver/src/components/WordFind/WordFind.js\";\nimport React, { Component } from 'react';\n\nvar WordFind =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(WordFind, _Component);\n\n  function WordFind() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, WordFind);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(WordFind)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      inputString: ''\n    };\n\n    _this.handleChange = function (event) {\n      console.log('in handleChange', event.target.value);\n\n      _this.setState({\n        inputString: event.target.value\n      });\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n      console.log('in handleSubmit', _this.state.inputString);\n      var inputString = _this.state.inputString;\n      var inarray = inputString.split(\" \");\n      var final = inarray.map(function (val) {\n        return val.split('');\n      }); //console.log(final[0][0]);\n      //console.log(final.length + \"length of final\")\n      //console.log(final.slice((0,0),(3,0)).join(''));\n      //var test = final[0];\n      //console.log(test.slice(0,2).join(''));\n\n      /*\n      [ '1', '2', '3', '4' ,5],\n       [ '5', '6', '7', '8',1 ],\n       [ '9', '0', '1', '2',1 ] ]\n       */\n      //for(var i=0; i<final.length; i++){\n      //Print all combinations of the stirngs greater than or equzl to 3\n\n      for (var _i = 0; _i < final.length; _i++) {\n        var a = final[_i]; //console.log(a);\n        //console.log(\"iteration number  \" +i)\n\n        for (var _j = 0; _j < a.length; _j++) {\n          for (var _k = _j + 3; _k <= a.length; _k++) {\n            console.log(a.slice(_j, _k).join(''));\n          }\n        }\n      } ///Print all vertical combinations of the stirngs greater than or equal to 3\n\n\n      for (var i = 0; i < final.length; i++) {\n        var aaa = final[i]; //console.log(a);\n        //console.log(\"iteration number  \" +i)\n\n        for (var j = 0; j < aaa.length; j++) {\n          for (var k = i + 2; k <= final.length - 1; k++) {\n            //console.log(\"i:\"+i + \" j:\"+j +\" k:\"+k);\n            //console.log(final[i][j]);\n            //console.log(final[k][j]);\n            var cnct = '';\n\n            for (var m = i; m <= k; m++) {\n              cnct += final[m][j];\n            }\n\n            console.log(cnct); //console.log(final.slice((i,j),(i,j)).join(''));\n          }\n        }\n      } //console.log(final.length);\n\n    };\n\n    return _this;\n  }\n\n  _createClass(WordFind, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Word Finder Search\"), React.createElement(\"pre\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, JSON.stringify(this.state)), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Find Words\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return WordFind;\n}(Component);\n\nexport default WordFind;","map":{"version":3,"sources":["/Users/Saleem/prime/word_find_solver/src/components/WordFind/WordFind.js"],"names":["React","Component","WordFind","state","inputString","handleChange","event","console","log","target","value","setState","handleSubmit","preventDefault","inarray","split","final","map","val","i","length","a","j","k","slice","join","aaa","cnct","m","JSON","stringify"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,Q;;;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACNC,MAAAA,WAAW,EAAG;AADR,K;;UAIRC,Y,GAAe,UAACC,KAAD,EAAW;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,KAAK,CAACG,MAAN,CAAaC,KAA5C;;AACA,YAAKC,QAAL,CAAc;AACVP,QAAAA,WAAW,EAAEE,KAAK,CAACG,MAAN,CAAaC;AADhB,OAAd;AAGD,K;;UAEDE,Y,GAAe,UAACN,KAAD,EAAW;AACxBA,MAAAA,KAAK,CAACO,cAAN;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B,MAAKL,KAAL,CAAWC,WAA1C;AAEA,UAAIA,WAAW,GAAG,MAAKD,KAAL,CAAWC,WAA7B;AAEJ,UAAIU,OAAO,GAAGV,WAAW,CAACW,KAAZ,CAAkB,GAAlB,CAAd;AAEA,UAAIC,KAAK,GAAGF,OAAO,CAACG,GAAR,CAAY,UAACC,GAAD;AAAA,eAASA,GAAG,CAACH,KAAJ,CAAU,EAAV,CAAT;AAAA,OAAZ,CAAZ,CAR4B,CAU5B;AAEA;AAEA;AAEA;AAEA;;AACA;;;;;AAKA;AAEA;;AACE,WAAI,IAAII,EAAC,GAAC,CAAV,EAAaA,EAAC,GAACH,KAAK,CAACI,MAArB,EAA6BD,EAAC,EAA9B,EAAiC;AAEnC,YAAIE,CAAC,GAAGL,KAAK,CAACG,EAAD,CAAb,CAFmC,CAGnC;AACA;;AACA,aAAI,IAAIG,EAAC,GAAC,CAAV,EAAaA,EAAC,GAACD,CAAC,CAACD,MAAjB,EAAyBE,EAAC,EAA1B,EAA6B;AAE7B,eAAI,IAAIC,EAAC,GAACD,EAAC,GAAC,CAAZ,EAAeC,EAAC,IAAGF,CAAC,CAACD,MAArB,EAA6BG,EAAC,EAA9B,EAAkC;AAClChB,YAAAA,OAAO,CAACC,GAAR,CAAYa,CAAC,CAACG,KAAF,CAAQF,EAAR,EAAUC,EAAV,EAAaE,IAAb,CAAkB,EAAlB,CAAZ;AACG;AACF;AACA,OAtC2B,CAyC5B;;;AACA,WAAI,IAAIN,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACH,KAAK,CAACI,MAArB,EAA6BD,CAAC,EAA9B,EAAiC;AAEjC,YAAIO,GAAG,GAAGV,KAAK,CAACG,CAAD,CAAf,CAFiC,CAGjC;AACA;;AACA,aAAI,IAAIG,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACI,GAAG,CAACN,MAAnB,EAA2BE,CAAC,EAA5B,EAA+B;AAE/B,eAAI,IAAIC,CAAC,GAACJ,CAAC,GAAC,CAAZ,EAAeI,CAAC,IAAGP,KAAK,CAACI,MAAN,GAAa,CAAhC,EAAmCG,CAAC,EAApC,EAAwC;AAEtC;AAEF;AACA;AAEA,gBAAII,IAAI,GAAG,EAAX;;AAEA,iBAAI,IAAIC,CAAC,GAACT,CAAV,EAAaS,CAAC,IAAGL,CAAjB,EAAoBK,CAAC,EAArB,EAAwB;AACtBD,cAAAA,IAAI,IAAIX,KAAK,CAACY,CAAD,CAAL,CAASN,CAAT,CAAR;AACD;;AAEDf,YAAAA,OAAO,CAACC,GAAR,CAAYmB,IAAZ,EAbwC,CAexC;AACC;AACA;AACA,OAnE2B,CA2E5B;;AAEG,K;;;;;;;6BACO;AAEN,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAME,IAAI,CAACC,SAAL,CAAe,KAAK3B,KAApB,CAAN,CAFA,EAGA;AAAM,QAAA,QAAQ,EAAE,KAAKS,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAoB,QAAA,QAAQ,EAAE,KAAKP,YAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAHA,CADF;AAWD;;;;EAxGoBJ,S;;AA2GvB,eAAeC,QAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass WordFind extends Component {\n   \n  state = {\n    inputString : ''\n  }\n\n  handleChange = (event) => {\n    console.log('in handleChange', event.target.value);\n    this.setState({\n        inputString: event.target.value\n    })\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n    console.log('in handleSubmit', this.state.inputString );\n    \n    let inputString = this.state.inputString\n\nlet inarray = inputString.split(\" \");\n\nlet final = inarray.map((val) => val.split(''));\n\n//console.log(final[0][0]);\n\n//console.log(final.length + \"length of final\")\n\n//console.log(final.slice((0,0),(3,0)).join(''));\n\n//var test = final[0];\n\n//console.log(test.slice(0,2).join(''));\n/*\n[ '1', '2', '3', '4' ,5],\n [ '5', '6', '7', '8',1 ],\n [ '9', '0', '1', '2',1 ] ]\n */\n//for(var i=0; i<final.length; i++){\n\n//Print all combinations of the stirngs greater than or equzl to 3\n  for(let i=0; i<final.length; i++){\n\nlet a = final[i]\n//console.log(a);\n//console.log(\"iteration number  \" +i)\nfor(let j=0; j<a.length; j++){\n\nfor(let k=j+3; k<= a.length; k++) {\nconsole.log(a.slice(j,k).join(''));\n  }\n}\n}\n\n\n///Print all vertical combinations of the stirngs greater than or equal to 3\nfor(var i=0; i<final.length; i++){\n\nvar aaa = final[i]\n//console.log(a);\n//console.log(\"iteration number  \" +i)\nfor(var j=0; j<aaa.length; j++){\n\nfor(var k=i+2; k<= final.length-1; k++) {\n\n  //console.log(\"i:\"+i + \" j:\"+j +\" k:\"+k);\n\n//console.log(final[i][j]);\n//console.log(final[k][j]);\n\nvar cnct = ''\n\nfor(var m=i; m<= k; m++){\n  cnct += final[m][j]\n}\n\nconsole.log(cnct)\n\n//console.log(final.slice((i,j),(i,j)).join(''));\n}\n}\n}\n\n\n\n\n\n\n\n//console.log(final.length);\n\n  }\n  render(){\n\n    return (\n      <div>\n      <h2>Word Finder Search</h2>\n      <pre>{JSON.stringify(this.state)}</pre>\n      <form onSubmit={this.handleSubmit}>\n          <input type='text'  onChange={this.handleChange} />\n          <input type='submit' value='Find Words' />\n\n      </form>\n  </div>\n    );\n  }\n}\n\nexport default WordFind;"]},"metadata":{},"sourceType":"module"}