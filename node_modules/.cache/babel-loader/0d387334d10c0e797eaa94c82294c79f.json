{"ast":null,"code":"import _classCallCheck from \"/Users/Saleem/prime/word_find_solver/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Saleem/prime/word_find_solver/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Saleem/prime/word_find_solver/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Saleem/prime/word_find_solver/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Saleem/prime/word_find_solver/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Saleem/prime/word_find_solver/src/components/WordFind/WordFind.js\";\nimport React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button'; // const fs = require (\"fs\");\n// const dictArr = fs.readFileSync(__dirname + \"/words.txt\").toString().split(\"\\n\");\n\nvar WordFind =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(WordFind, _Component);\n\n  function WordFind() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, WordFind);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(WordFind)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      inputString: ''\n    };\n\n    _this.handleChange = function (event) {\n      console.log('in handleChange', event.target.value);\n\n      _this.setState({\n        inputString: event.target.value\n      });\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n      console.log('in handleSubmit', _this.state.inputString); //     let inputString = this.state.inputString\n      //     var inarray = inputString.replace(/[\\n\\r]/g, '/').replace(/([' ''])/g, '').split('/')\n      // var final = inarray.map((val) => val.split(''));\n      // //Print all combinations of the stirngs greater than or equzl to 3\n      // var hArray = []\n      // for(var i=0; i<final.length; i++){\n      // var a = final[i]\n      // //console.log(a);\n      // //console.log(\"iteration number  \" +i)\n      // for(var j=0; j<a.length; j++){\n      // for(var k=j+3; k<= a.length; k++) {\n      // hArray.push(a.slice(j,k).join(''))\n      //   }\n      // }\n      // }\n      // ///Print all vertical combinations of the stirngs greater than or equal to 3\n      // var vArray = []\n      // for(var i=0; i<final.length; i++){\n      // var aaa = final[i]\n      // for(var j=0; j<aaa.length; j++){\n      // for(var k=i+2; k<= final.length-1; k++) {\n      // var cnct = ''\n      // for(var m=i; m<= k; m++){\n      //   cnct += final[m][j]\n      // }\n      // vArray.push(cnct)\n      // }\n      // }\n      // }\n      // //console.log(vArray)\n      // //console.log(hArray)\n      // const fs = require (\"fs\");\n      // const dictArr = fs.readFileSync(__dirname + \"/words.txt\").toString().split(\"\\n\");\n      // console.log(dictArr.length)\n      // var matchArrayV =[]\n      // for(var i=0; i<= vArray.length; i++){\n      // for(var j=0; j<= dictArr.length; j++) {\n      // if (vArray[i] === dictArr[j] ) {\n      //   console.log(vArray[i]) }\n      // }\n      // }\n      // for(var i=0; i<= hArray.length; i++){\n      // for(var j=0; j<= dictArr.length; j++) {\n      // if (vArray[i] === dictArr[j] ) {\n      //   console.log(vArray[i]) }\n      // }\n      // }\n      // console.log(matchArrayV)\n      // //console.log(matchArrayH)\n    };\n\n    return _this;\n  }\n\n  _createClass(WordFind, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"pre\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, JSON.stringify(this.state)), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Word Finder Search\"), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"matrix\",\n        label: \"search\",\n        onChange: this.handleChange,\n        margin: \"normal\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      })), React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        className: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Find Words\"))));\n    }\n  }]);\n\n  return WordFind;\n}(Component);\n\nexport default WordFind;","map":{"version":3,"sources":["/Users/Saleem/prime/word_find_solver/src/components/WordFind/WordFind.js"],"names":["React","Component","Grid","TextField","Button","WordFind","state","inputString","handleChange","event","console","log","target","value","setState","handleSubmit","preventDefault","JSON","stringify"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB,C,CACA;AAEA;;IAIMC,Q;;;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACNC,MAAAA,WAAW,EAAG;AADR,K;;UAIRC,Y,GAAe,UAACC,KAAD,EAAW;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,KAAK,CAACG,MAAN,CAAaC,KAA5C;;AACA,YAAKC,QAAL,CAAc;AACVP,QAAAA,WAAW,EAAEE,KAAK,CAACG,MAAN,CAAaC;AADhB,OAAd;AAGD,K;;UAEDE,Y,GAAe,UAACN,KAAD,EAAW;AACxBA,MAAAA,KAAK,CAACO,cAAN;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B,MAAKL,KAAL,CAAWC,WAA1C,EAFwB,CAG5B;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAIA;AACA;AAEA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AAEG,K;;;;;;;6BACO;AAEN,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMU,IAAI,CAACC,SAAL,CAAe,KAAKZ,KAApB,CAAN,CAFA,EAGA;AAAM,QAAA,QAAQ,EAAE,KAAKS,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADA,EAGI,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AACN,QAAA,EAAE,EAAC,QADG;AAEN,QAAA,KAAK,EAAC,QAFA;AAGN,QAAA,QAAQ,EAAE,KAAKP,YAHT;AAIN,QAAA,MAAM,EAAC,QAJD;AAKN,QAAA,OAAO,EAAC,UALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAHJ,EAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAC,SAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CAZA,CAHA,CADF;AAgCD;;;;EA9HoBP,S;;AAiIvB,eAAeI,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n// const fs = require (\"fs\");\n\n// const dictArr = fs.readFileSync(__dirname + \"/words.txt\").toString().split(\"\\n\");\n\n\n\nclass WordFind extends Component {\n   \n  state = {\n    inputString : ''\n  }\n\n  handleChange = (event) => {\n    console.log('in handleChange', event.target.value);\n    this.setState({\n        inputString: event.target.value\n    })\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n    console.log('in handleSubmit', this.state.inputString );\n//     let inputString = this.state.inputString\n//     var inarray = inputString.replace(/[\\n\\r]/g, '/').replace(/([' ''])/g, '').split('/')\n\n// var final = inarray.map((val) => val.split(''));\n\n// //Print all combinations of the stirngs greater than or equzl to 3\n// var hArray = []\n// for(var i=0; i<final.length; i++){\n\n// var a = final[i]\n// //console.log(a);\n// //console.log(\"iteration number  \" +i)\n// for(var j=0; j<a.length; j++){\n\n// for(var k=j+3; k<= a.length; k++) {\n// hArray.push(a.slice(j,k).join(''))\n//   }\n// }\n// }\n\n\n// ///Print all vertical combinations of the stirngs greater than or equal to 3\n// var vArray = []\n// for(var i=0; i<final.length; i++){\n\n// var aaa = final[i]\n\n// for(var j=0; j<aaa.length; j++){\n\n// for(var k=i+2; k<= final.length-1; k++) {\n// var cnct = ''\n// for(var m=i; m<= k; m++){\n//   cnct += final[m][j]\n// }\n\n// vArray.push(cnct)\n\n// }\n// }\n// }\n\n\n\n// //console.log(vArray)\n// //console.log(hArray)\n\n// const fs = require (\"fs\");\n\n// const dictArr = fs.readFileSync(__dirname + \"/words.txt\").toString().split(\"\\n\");\n// console.log(dictArr.length)\n// var matchArrayV =[]\n\n\n\n// for(var i=0; i<= vArray.length; i++){\n// for(var j=0; j<= dictArr.length; j++) {\n// if (vArray[i] === dictArr[j] ) {\n//   console.log(vArray[i]) }\n// }\n// }\n\n\n// for(var i=0; i<= hArray.length; i++){\n// for(var j=0; j<= dictArr.length; j++) {\n// if (vArray[i] === dictArr[j] ) {\n//   console.log(vArray[i]) }\n// }\n// }\n\n\n\n\n// console.log(matchArrayV)\n// //console.log(matchArrayH)\n\n  }\n  render(){\n\n    return (\n      <div>\n      \n      <pre>{JSON.stringify(this.state)}</pre>\n      <form onSubmit={this.handleSubmit}>\n      <h2>Word Finder Search</h2>\n          \n          <Grid item xs={12}>\n              <TextField\n        id=\"matrix\"\n        label=\"search\"\n        onChange={this.handleChange} \n        margin=\"normal\"\n        variant=\"outlined\"\n      />\n      </Grid>\n      <center>\n          <Button\n            type=\"submit\"\n            className=\"primary\" \n          >\n            Find Words\n          </Button>\n        </center>\n      {/* <form onSubmit={this.handleSubmit}>\n          <input type='text'  onChange={this.handleChange} />\n          <input type='submit' value='Find Words' />\n\n      </form> */}\n      </form>\n  </div>\n    );\n  }\n}\n\nexport default WordFind;"]},"metadata":{},"sourceType":"module"}