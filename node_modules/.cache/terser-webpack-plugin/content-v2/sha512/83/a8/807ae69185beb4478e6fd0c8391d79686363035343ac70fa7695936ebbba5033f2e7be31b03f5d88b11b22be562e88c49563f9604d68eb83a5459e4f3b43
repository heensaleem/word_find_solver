{"map":"{\"version\":3,\"sources\":[\"/Users/Saleem/prime/word_find_solver/src/components/GalleryListItem/GalleryListItem.js\",\"/Users/Saleem/prime/word_find_solver/src/components/GalleryList/GalleryList.js\",\"/Users/Saleem/prime/word_find_solver/src/components/App/App.js\",\"/Users/Saleem/prime/word_find_solver/src/registerServiceWorker.js\",\"/Users/Saleem/prime/word_find_solver/src/index.js\"],\"names\":[\"GalleryListItem\",\"state\",\"isClicked\",\"handleClick\",\"_this\",\"setState\",\"clickLike\",\"likeId\",\"props\",\"imageSwitch\",\"_this2\",\"this\",\"console\",\"log\",\"react_default\",\"a\",\"createElement\",\"onClick\",\"className\",\"image\",\"description\",\"src\",\"path\",\"alt\",\"id\",\"likes\",\"React\",\"Component\",\"GalleryList\",\"images\",\"map\",\"picture\",\"components_GalleryListItem_GalleryListItem\",\"key\",\"App\",\"imageList\",\"getImages\",\"axios\",\"get\",\"then\",\"response\",\"data\",\"catch\",\"error\",\"put\",\"concat\",\"components_GalleryList_GalleryList\",\"isLocalhost\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"registerValidSW\",\"swUrl\",\"navigator\",\"serviceWorker\",\"register\",\"registration\",\"onupdatefound\",\"installingWorker\",\"installing\",\"onstatechange\",\"controller\",\"ReactDOM\",\"render\",\"components_App_App\",\"document\",\"getElementById\",\"URL\",\"process\",\"origin\",\"addEventListener\",\"fetch\",\"status\",\"headers\",\"indexOf\",\"ready\",\"unregister\",\"reload\",\"checkValidServiceWorker\",\"registerServiceWorker\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React from 'react';\\nimport './GalleryListItem.css';\\n\\n\\nclass GalleryListItem extends React.Component {\\n    state = {\\n      isClicked: false  \\n    }\\n    handleClick = () => {\\n        this.setState({\\n            isClicked: !this.state.isClicked\\n        })\\n    }\\n\\n    clickLike = (likeId) => {\\n        this.props.clickLike(likeId)\\n    }\\n    render(){\\n        console.log(this.state);\\n        let imageSwitch;\\n\\n        if(this.state.isClicked) {\\n            imageSwitch = (\\n                <p onClick={this.handleClick} className=\\\"textLayout\\\">{this.props.image.description}</p>\\n            )\\n        }else {\\n            imageSwitch = \\n            <img onClick={this.handleClick} src={this.props.image.path} alt='' />\\n            \\n        }\\n\\n\\n        return(\\n            \\n            <div className=\\\"imageDisplay\\\">\\n            {imageSwitch}\\n            <br />\\n            <button  className=\\\"likeButton\\\" onClick={() => this.clickLike(this.props.image.id)}>Like</button> \\n            <p>Likes: {this.props.image.likes}</p>\\n            \\n            </div>\\n        )\\n    }\\n}\\n\\nexport default GalleryListItem;\",\"import React, {Component} from 'react';\\nimport GalleryListItem from '../GalleryListItem/GalleryListItem';\\n\\nclass GalleryList extends Component {\\n    render() {\\n        return(\\n            <div>\\n                {this.props.images.map(picture => {\\n                    return(\\n                        <GalleryListItem key={picture.id} clickLike={this.props.clickLike} image = {picture} />\\n                    )\\n                })}\\n                \\n            </div>\\n        )   \\n    }\\n}\\n\\n\\nexport default GalleryList;\",\"import React, { Component } from 'react';\\nimport './App.css';\\nimport axios from 'axios';\\nimport GalleryList from '../GalleryList/GalleryList'\\n\\nclass App extends Component {\\n\\n  state = {\\n    imageList : []\\n  }\\n\\n  componentDidMount() {\\n    this.getImages();\\n  }\\n\\n  getImages = () => {\\n    axios.get('/gallery')\\n    .then(response => {\\n      console.log(response.data);\\n      this.setState({\\n        imageList : response.data\\n      })\\n    }).catch((error) => {\\n      console.log('Error in getImage', error);\\n    })\\n  }\\n\\n  clickLike = (likeId) => {\\n    axios.put(`/gallery/like/${likeId}`)\\n    .then(response => {\\n      this.getImages();\\n    }).catch((error) => {\\n      console.log('Error in clickLike', error);\\n    })\\n  }\\n\\n\\n  render() {\\n    return (\\n      <div className=\\\"App\\\">\\n        <header className=\\\"App-header\\\">\\n          <h1 className=\\\"App-title\\\"> My Gallery </h1>\\n        </header>\\n        <br/>\\n        {/*<pre>{JSON.stringify(this.state.imageList)}</pre>*/}\\n        \\n        <GalleryList clickLike = {this.clickLike} images = {this.state.imageList}/>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\",\"// In production, we register a service worker to serve assets from local cache.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on the \\\"N+1\\\" visit to a page, since previously\\n// cached resources are updated in the background.\\n\\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\\n// This link also includes instructions on opting out of this behavior.\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport default function register() {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Lets check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\\n          );\\n        });\\n      } else {\\n        // Is not local host. Just register service worker\\n        registerValidSW(swUrl);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the old content will have been purged and\\n              // the fresh content will have been added to the cache.\\n              // It's the perfect time to display a \\\"New content is\\n              // available; please refresh.\\\" message in your web app.\\n              console.log('New content is available; please refresh.');\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      if (\\n        response.status === 404 ||\\n        response.headers.get('content-type').indexOf('javascript') === -1\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './components/App/App';\\nimport registerServiceWorker from './registerServiceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\nregisterServiceWorker();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{16:function(e,t,n){e.exports=n(44)},22:function(e,t,n){},23:function(e,t,n){},43:function(e,t,n){},44:function(e,t,n){\"use strict\";n.r(t);var i=n(0),a=n.n(i),o=n(15),c=n.n(o),r=(n(22),n(2)),l=n(3),s=n(5),u=n(4),h=n(6),f=(n(23),n(8)),g=n.n(f),p=(n(43),function(e){function t(){var e,n;Object(r.a)(this,t);for(var i=arguments.length,a=new Array(i),o=0;o<i;o++)a[o]=arguments[o];return(n=Object(s.a)(this,(e=Object(u.a)(t)).call.apply(e,[this].concat(a)))).state={isClicked:!1},n.handleClick=function(){n.setState({isClicked:!n.state.isClicked})},n.clickLike=function(e){n.props.clickLike(e)},n}return Object(h.a)(t,e),Object(l.a)(t,[{key:\"render\",value:function(){var e,t=this;return console.log(this.state),e=this.state.isClicked?a.a.createElement(\"p\",{onClick:this.handleClick,className:\"textLayout\"},this.props.image.description):a.a.createElement(\"img\",{onClick:this.handleClick,src:this.props.image.path,alt:\"\"}),a.a.createElement(\"div\",{className:\"imageDisplay\"},e,a.a.createElement(\"br\",null),a.a.createElement(\"button\",{className:\"likeButton\",onClick:function(){return t.clickLike(t.props.image.id)}},\"Like\"),a.a.createElement(\"p\",null,\"Likes: \",this.props.image.likes))}}]),t}(a.a.Component)),d=function(e){function t(){return Object(r.a)(this,t),Object(s.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(h.a)(t,e),Object(l.a)(t,[{key:\"render\",value:function(){var e=this;return a.a.createElement(\"div\",null,this.props.images.map(function(t){return a.a.createElement(p,{key:t.id,clickLike:e.props.clickLike,image:t})}))}}]),t}(i.Component),m=function(e){function t(){var e,n;Object(r.a)(this,t);for(var i=arguments.length,a=new Array(i),o=0;o<i;o++)a[o]=arguments[o];return(n=Object(s.a)(this,(e=Object(u.a)(t)).call.apply(e,[this].concat(a)))).state={imageList:[]},n.getImages=function(){g.a.get(\"/gallery\").then(function(e){console.log(e.data),n.setState({imageList:e.data})}).catch(function(e){console.log(\"Error in getImage\",e)})},n.clickLike=function(e){g.a.put(\"/gallery/like/\".concat(e)).then(function(e){n.getImages()}).catch(function(e){console.log(\"Error in clickLike\",e)})},n}return Object(h.a)(t,e),Object(l.a)(t,[{key:\"componentDidMount\",value:function(){this.getImages()}},{key:\"render\",value:function(){return a.a.createElement(\"div\",{className:\"App\"},a.a.createElement(\"header\",{className:\"App-header\"},a.a.createElement(\"h1\",{className:\"App-title\"},\" My Gallery \")),a.a.createElement(\"br\",null),a.a.createElement(d,{clickLike:this.clickLike,images:this.state.imageList}))}}]),t}(i.Component),k=Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));function v(e){navigator.serviceWorker.register(e).then(function(e){e.onupdatefound=function(){var t=e.installing;t.onstatechange=function(){\"installed\"===t.state&&(navigator.serviceWorker.controller?console.log(\"New content is available; please refresh.\"):console.log(\"Content is cached for offline use.\"))}}}).catch(function(e){console.error(\"Error during service worker registration:\",e)})}c.a.render(a.a.createElement(m,null),document.getElementById(\"root\")),function(){if(\"serviceWorker\"in navigator){if(new URL(\"\",window.location).origin!==window.location.origin)return;window.addEventListener(\"load\",function(){var e=\"\".concat(\"\",\"/service-worker.js\");k?(function(e){fetch(e).then(function(t){404===t.status||-1===t.headers.get(\"content-type\").indexOf(\"javascript\")?navigator.serviceWorker.ready.then(function(e){e.unregister().then(function(){window.location.reload()})}):v(e)}).catch(function(){console.log(\"No internet connection found. App is running in offline mode.\")})}(e),navigator.serviceWorker.ready.then(function(){console.log(\"This web app is being served cache-first by a service worker. To learn more, visit https://goo.gl/SC7cgQ\")})):v(e)})}}()}},[[16,1,2]]]);","extractedComments":[]}